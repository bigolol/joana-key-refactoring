\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Tue Jun 06 08:56:04 CEST 2017
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]useUninterpretedMultiplication=true
[SMTSettings]SelectedTaclets=
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_NONE
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[Strategy]Timeout=-1
[Strategy]MaximumNumberOfAutomaticApplications=10000
[SMTSettings]integersMaximum=2147483645
[Choice]DefaultChoices=assertions-assertions\\:safe , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsIgnoringOF , programRules-programRules\\:Java , runtimeExceptions-runtimeExceptions\\:ban , JavaCard-JavaCard\\:on , Strings-Strings\\:on , modelFields-modelFields\\:treatAsAxiom , bigint-bigint\\:on , sequences-sequences\\:on , moreSeqRules-moreSeqRules\\:off , reach-reach\\:on , integerSimplificationRules-integerSimplificationRules\\:full , permissions-permissions\\:off , wdOperator-wdOperator\\:L , wdChecks-wdChecks\\:off , joinGenerateIsWeakeningGoal-joinGenerateIsWeakeningGoal\\:off
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]maxGenericSorts=2
[SMTSettings]integersMinimum=-2147483645
[SMTSettings]invariantForall=false
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
"
}

\javaSource "proofs";

\proofObligation "#Proof Obligation Settings
#Tue Jun 06 08:56:04 CEST 2017
name=proofs.sourceFile[proofs.sourceFile\\:\\:identity(int,int)].Non-interference contract.0
contract=proofs.sourceFile[proofs.sourceFile\\:\\:identity(int,int)].Non-interference contract.0
class=de.uka.ilkd.key.informationflow.po.InfFlowContractPO
";

\proof {
(keyLog "0" (keyUser "holgerklein" ) (keyVersion "00c1abfd22b738afe24e89fecc2ee4eec2c38f4a"))

(autoModeTime "351")

(branch "dummy ID"
(builtin "One Step Simplification" (formula "1"))
(rule "impRight" (formula "1"))
(rule "impRight" (formula "2"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "4"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "5"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "6"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "7"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "8"))
(rule "andLeft" (formula "3"))
(rule "notLeft" (formula "10"))
(rule "notLeft" (formula "4"))
(rule "eqSymm" (formula "15"))
(rule "eqSymm" (formula "1"))
(rule "eqSymm" (formula "2"))
(rule "eqSymm" (formula "12") (term "1,0,0,1"))
(rule "eqSymm" (formula "12") (term "0,0,0,0,1"))
(rule "eqSymm" (formula "12") (term "1,0,0,0,1"))
(rule "eqSymm" (formula "7") (term "0,0,0,0,1"))
(rule "eqSymm" (formula "7") (term "1,0,0,1"))
(rule "eqSymm" (formula "7") (term "1,0,0,0,1"))
(rule "assignment" (formula "12") (term "1"))
(builtin "One Step Simplification" (formula "12"))
(rule "assignment" (formula "7") (term "1"))
(builtin "One Step Simplification" (formula "7"))
(rule "applyEq" (formula "9") (term "1,0") (ifseqformula "1"))
(rule "applyEq" (formula "14") (term "0") (ifseqformula "1"))
(rule "applyEq" (formula "11") (term "1") (ifseqformula "1"))
(rule "applyEq" (formula "10") (term "0,0") (ifseqformula "1"))
(rule "applyEq" (formula "11") (term "0,0,1,0,0") (ifseqformula "2"))
(rule "boxToDiamond" (formula "11") (term "1"))
(builtin "One Step Simplification" (formula "11"))
(rule "notLeft" (formula "11"))
(rule "boxToDiamond" (formula "7") (term "1"))
(builtin "One Step Simplification" (formula "7"))
(rule "notLeft" (formula "7"))
(rule "Class_invariant_axiom_for_proofs_sourceFile" (formula "9") (ifseqformula "5"))
(rule "true_left" (formula "9"))
(rule "Class_invariant_axiom_for_proofs_sourceFile" (formula "6") (ifseqformula "5"))
(rule "true_left" (formula "6"))
(rule "methodBodyExpand" (formula "9") (term "1") (newnames "heapBefore_identity,savedHeapBefore_identity"))
(builtin "One Step Simplification" (formula "9"))
(rule "methodBodyExpand" (formula "8") (term "1") (newnames "heapBefore_identity_0,savedHeapBefore_identity_0"))
(builtin "One Step Simplification" (formula "8"))
(rule "assignmentAdditionInt" (formula "9") (term "1"))
(builtin "One Step Simplification" (formula "9"))
(rule "translateJavaAddInt" (formula "9") (term "0,1,0"))
(rule "polySimp_addComm0" (formula "9") (term "0,1,0"))
(rule "assignmentAdditionInt" (formula "8") (term "1"))
(builtin "One Step Simplification" (formula "8"))
(rule "translateJavaAddInt" (formula "8") (term "0,1,0"))
(rule "polySimp_addComm0" (formula "8") (term "0,1,0"))
(rule "assignmentSubtractionInt" (formula "9") (term "1"))
(builtin "One Step Simplification" (formula "9"))
(rule "translateJavaSubInt" (formula "9") (term "0,1,0"))
(rule "polySimp_elimSub" (formula "9") (term "0,1,0"))
(rule "polySimp_addComm1" (formula "9") (term "0,1,0"))
(rule "polySimp_pullOutFactor1" (formula "9") (term "0,0,1,0"))
(rule "add_literals" (formula "9") (term "1,0,0,1,0"))
(rule "times_zero_1" (formula "9") (term "0,0,1,0"))
(rule "add_zero_left" (formula "9") (term "0,1,0"))
(rule "assignmentSubtractionInt" (formula "8") (term "1"))
(builtin "One Step Simplification" (formula "8"))
(rule "translateJavaSubInt" (formula "8") (term "0,1,0"))
(rule "polySimp_elimSub" (formula "8") (term "0,1,0"))
(rule "polySimp_addComm1" (formula "8") (term "0,1,0"))
(rule "polySimp_pullOutFactor1" (formula "8") (term "0,0,1,0"))
(rule "add_literals" (formula "8") (term "1,0,0,1,0"))
(rule "times_zero_1" (formula "8") (term "0,0,1,0"))
(rule "add_zero_left" (formula "8") (term "0,1,0"))
(rule "methodCallReturn" (formula "9") (term "1"))
(rule "assignment" (formula "9") (term "1"))
(builtin "One Step Simplification" (formula "9"))
(rule "methodCallReturn" (formula "8") (term "1"))
(rule "assignment" (formula "8") (term "1"))
(builtin "One Step Simplification" (formula "8"))
(rule "methodCallEmpty" (formula "9") (term "1"))
(rule "methodCallEmpty" (formula "8") (term "1"))
(rule "tryEmpty" (formula "9") (term "1"))
(rule "tryEmpty" (formula "8") (term "1"))
(rule "emptyModality" (formula "9") (term "1"))
(builtin "One Step Simplification" (formula "9"))
(rule "notRight" (formula "9"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "eqSymm" (formula "3"))
(rule "eqSymm" (formula "2"))
(rule "applyEq" (formula "1") (term "0") (ifseqformula "5"))
(rule "applyEq" (formula "14") (term "0") (ifseqformula "2"))
(rule "eqSymm" (formula "14"))
(rule "applyEq" (formula "11") (term "1,0") (ifseqformula "1"))
(rule "applyEq" (formula "8") (term "1,0") (ifseqformula "1"))
(rule "applyEq" (formula "9") (term "0,0") (ifseqformula "1"))
(rule "applyEq" (formula "13") (term "0") (ifseqformula "1"))
(rule "applyEq" (formula "5") (term "1") (ifseqformula "1"))
(rule "emptyModality" (formula "12") (term "1"))
(builtin "One Step Simplification" (formula "12"))
(rule "notRight" (formula "12"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "eqSymm" (formula "3"))
(rule "eqSymm" (formula "2"))
(rule "close" (formula "17") (ifseqformula "2"))
)

}
