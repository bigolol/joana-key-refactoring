<?xml version="1.0" encoding="UTF-8" ?>
<testsuite errors="0" failures="0" hostname="holger-ThinkPad-T430s" name="joanakeyrefactoring.ViolationsWrapperTest" skipped="0" tests="2" time="30.064" timestamp="2017-08-07T19:05:04">
  <properties>
    <property name="netbeans.autoupdate.country" value="DE" />
    <property name="javac.test.classpath" value="dep\antlr-runtime-4.5.3.jar:dep\joana.api.jar:dep\KeY.jar:json.jar:dep/javacg-0.1-SNAPSHOT-static.jar:dep/commons-io-2.5/commons-io-2.5.jar:build/classes" />
    <property name="javac.includes" value="joanakeyrefactoring/ViolationsWrapperTest.java" />
    <property name="ant.core.lib" value="/home/holger/netbeans-8.2/extide/ant/lib/ant.jar" />
    <property name="javadoc.windowtitle" value="" />
    <property name="user.dir" value="/home/holger/Code/joana-key-refactoring" />
    <property name="java.vm.version" value="25.141-b15" />
    <property name="libs.MySQLDriver.classpath" value="/home/holger/netbeans-8.2/ide/modules/ext/mysql-connector-java-5.1.23-bin.jar" />
    <property name="libs.eclipselinkmodelgen.src" value="" />
    <property name="javadoc.notree" value="false" />
    <property name="netbeans.autoupdate.version" value="1.23" />
    <property name="netbeans.running.environment" value="gnome" />
    <property name="javac.profile.cmd.line.arg" value="" />
    <property name="jdk.home" value="/home/holger/jdk1.8.0_141" />
    <property name="libs.javac-api.src" value="" />
    <property name="javadoc.noindex" value="false" />
    <property name="libs.jpa2-persistence.classpath" value="/home/holger/netbeans-8.2/java/modules/ext/hibernate4/hibernate-jpa-2.1-api-1.0.0.Final.jar" />
    <property name="sun.os.patch.level" value="unknown" />
    <property name="do.archive+manifest.available" value="true" />
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification" />
    <property name="nb.show.statistics.ui" value="usageStatisticsEnabled" />
    <property name="netbeans.autoupdate.variant" value="" />
    <property name="have.tests" value="true" />
    <property name="addExports:java.desktop/com.sun.java.swing.plaf.gtk" value="ALL-UNNAMED" />
    <property name="org.xml.sax.driver" value="com.sun.org.apache.xerces.internal.jaxp.SAXParserImpl$JAXPSAXParser" />
    <property name="libs.hamcrest.classpath" value="/home/holger/netbeans-8.2/platform/modules/ext/hamcrest-core-1.3.jar" />
    <property name="libs.javac-api.javadoc" value="" />
    <property name="os.name" value="Linux" />
    <property name="test.class" value="joanakeyrefactoring.ViolationsWrapperTest" />
    <property name="libs.beans-binding.classpath" value="/home/holger/netbeans-8.2/java/modules/ext/beansbinding-1.2.1.jar" />
    <property name="ap.proc.none.internal" value="" />
    <property name="libs.JWSAntTasks.maven-pom" value="" />
    <property name="libs.testng.src" value="" />
    <property name="java.vendor.url.bug" value="http://bugreport.sun.com/bugreport/" />
    <property name="libs.jaxb.maven-pom" value="" />
    <property name="os.arch" value="amd64" />
    <property name="libs.eclipselink.src" value="" />
    <property name="user.name" value="holger" />
    <property name="copylibs.rebase" value="true" />
    <property name="libs.swing-layout.maven-pom" value="" />
    <property name="sun.java.command" value="org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner joanakeyrefactoring.ViolationsWrapperTest skipNonTests=false filtertrace=true haltOnError=false haltOnFailure=false showoutput=true outputtoformatters=true logfailedtests=true threadid=0 logtestlistenerevents=true formatter=org.apache.tools.ant.taskdefs.optional.junit.BriefJUnitResultFormatter formatter=org.apache.tools.ant.taskdefs.optional.junit.XMLJUnitResultFormatter,/home/holger/Code/joana-key-refactoring/build/test/results/TEST-joanakeyrefactoring.ViolationsWrapperTest.xml crashfile=/home/holger/Code/joana-key-refactoring/build/junitvmwatcher6885681105184127969.properties propsfile=/home/holger/Code/joana-key-refactoring/build/junit7291511268364724229.properties" />
    <property name="build.classes.dir" value="build/classes" />
    <property name="netbeans.accept_license_class" value="org.netbeans.license.AcceptLicense" />
    <property name="build.sysclasspath" value="ignore" />
    <property name="manifest.encoding" value="UTF-8" />
    <property name="ap.supported.internal" value="true" />
    <property name="java.failonerror" value="true" />
    <property name="libs.jaxws21.javadoc" value="/home/holger/netbeans-8.2/java/docs/jaxws-api-doc.zip" />
    <property name="includes" value="**" />
    <property name="user.country" value="DE" />
    <property name="manifest.file" value="manifest.mf" />
    <property name="addExports:java.desktop/sun.awt" value="ALL-UNNAMED" />
    <property name="javadoc.encoding" value="UTF-8" />
    <property name="javac.classpath" value="dep\antlr-runtime-4.5.3.jar:dep\joana.api.jar:dep\KeY.jar:json.jar:dep/javacg-0.1-SNAPSHOT-static.jar:dep/commons-io-2.5/commons-io-2.5.jar" />
    <property name="libs.spring-framework400.classpath" value="/home/holger/netbeans-8.2/ide/modules/org-apache-commons-logging.jar:/home/holger/netbeans-8.2/java/modules/ext/cglib-2.2.jar:/home/holger/netbeans-8.2/java/modules/ext/spring-4/spring-aop-4.0.1.RELEASE.jar:/home/holger/netbeans-8.2/java/modules/ext/spring-4/spring-aspects-4.0.1.RELEASE.jar:/home/holger/netbeans-8.2/java/modules/ext/spring-4/spring-beans-4.0.1.RELEASE.jar:/home/holger/netbeans-8.2/java/modules/ext/spring-4/spring-build-src-4.0.1.RELEASE.jar:/home/holger/netbeans-8.2/java/modules/ext/spring-4/spring-context-4.0.1.RELEASE.jar:/home/holger/netbeans-8.2/java/modules/ext/spring-4/spring-context-support-4.0.1.RELEASE.jar:/home/holger/netbeans-8.2/java/modules/ext/spring-4/spring-core-4.0.1.RELEASE.jar:/home/holger/netbeans-8.2/java/modules/ext/spring-4/spring-expression-4.0.1.RELEASE.jar:/home/holger/netbeans-8.2/java/modules/ext/spring-4/spring-framework-bom-4.0.1.RELEASE.jar:/home/holger/netbeans-8.2/java/modules/ext/spring-4/spring-instrument-4.0.1.RELEASE.jar:/home/holger/netbeans-8.2/java/modules/ext/spring-4/spring-instrument-tomcat-4.0.1.RELEASE.jar:/home/holger/netbeans-8.2/java/modules/ext/spring-4/spring-jdbc-4.0.1.RELEASE.jar:/home/holger/netbeans-8.2/java/modules/ext/spring-4/spring-jms-4.0.1.RELEASE.jar:/home/holger/netbeans-8.2/java/modules/ext/spring-4/spring-messaging-4.0.1.RELEASE.jar:/home/holger/netbeans-8.2/java/modules/ext/spring-4/spring-orm-4.0.1.RELEASE.jar:/home/holger/netbeans-8.2/java/modules/ext/spring-4/spring-oxm-4.0.1.RELEASE.jar:/home/holger/netbeans-8.2/java/modules/ext/spring-4/spring-test-4.0.1.RELEASE.jar:/home/holger/netbeans-8.2/java/modules/ext/spring-4/spring-tx-4.0.1.RELEASE.jar:/home/holger/netbeans-8.2/java/modules/ext/spring-4/spring-web-4.0.1.RELEASE.jar:/home/holger/netbeans-8.2/java/modules/ext/spring-4/spring-webmvc-4.0.1.RELEASE.jar:/home/holger/netbeans-8.2/java/modules/ext/spring-4/spring-webmvc-portlet-4.0.1.RELEASE.jar:/home/holger/netbeans-8.2/java/modules/ext/spring-4/spring-websocket-4.0.1.RELEASE.jar" />
    <property name="debug-transport" value="dt_socket" />
    <property name="netbeans.home" value="/home/holger/netbeans-8.2/platform" />
    <property name="build.compiler.emacs" value="true" />
    <property name="java.endorsed.dirs" value="/home/holger/jdk1.8.0_141/jre/lib/endorsed" />
    <property name="test.includes" value="joanakeyrefactoring/ViolationsWrapperTest.java" />
    <property name="&gt;&gt;&gt;&gt;&gt;&gt;&gt;" value="a206162ff62e924d52346ae1cdcff34c5561882f" />
    <property name="netbeans.dynamic.classpath" value="/home/holger/netbeans-8.2/platform/core/org-openide-filesystems-compat8.jar:/home/holger/netbeans-8.2/platform/core/org-openide-filesystems.jar:/home/holger/netbeans-8.2/platform/core/core.jar:/home/holger/netbeans-8.2/platform/core/core-base.jar:/home/holger/netbeans-8.2/platform/core/org-netbeans-libs-asm.jar:/home/holger/netbeans-8.2/platform/core/asm-all-5.0.1.jar:/home/holger/netbeans-8.2/platform/core/locale/org-openide-filesystems_zh_CN.jar:/home/holger/netbeans-8.2/platform/core/locale/org-openide-filesystems_ru.jar:/home/holger/netbeans-8.2/platform/core/locale/org-openide-filesystems-compat8_ja.jar:/home/holger/netbeans-8.2/platform/core/locale/org-openide-filesystems-compat8_pt_BR.jar:/home/holger/netbeans-8.2/platform/core/locale/org-openide-filesystems-compat8_ru.jar:/home/holger/netbeans-8.2/platform/core/locale/org-netbeans-libs-asm_ja.jar:/home/holger/netbeans-8.2/platform/core/locale/org-netbeans-libs-asm_ru.jar:/home/holger/netbeans-8.2/platform/core/locale/org-netbeans-libs-asm_pt_BR.jar:/home/holger/netbeans-8.2/platform/core/locale/core-base_pt_BR.jar:/home/holger/netbeans-8.2/platform/core/locale/core-base_ru.jar:/home/holger/netbeans-8.2/platform/core/locale/core_zh_CN.jar:/home/holger/netbeans-8.2/platform/core/locale/org-openide-filesystems_pt_BR.jar:/home/holger/netbeans-8.2/platform/core/locale/org-netbeans-libs-asm_zh_CN.jar:/home/holger/netbeans-8.2/platform/core/locale/org-openide-filesystems_ja.jar:/home/holger/netbeans-8.2/platform/core/locale/org-openide-filesystems-compat8_zh_CN.jar:/home/holger/netbeans-8.2/platform/core/locale/core_ru.jar:/home/holger/netbeans-8.2/platform/core/locale/core-base_zh_CN.jar:/home/holger/netbeans-8.2/platform/core/locale/core_ja.jar:/home/holger/netbeans-8.2/platform/core/locale/core_pt_BR.jar:/home/holger/netbeans-8.2/platform/core/locale/core-base_ja.jar:/home/holger/netbeans-8.2/nb/core/org-netbeans-upgrader.jar:/home/holger/netbeans-8.2/nb/core/locale/org-netbeans-upgrader_ru.jar:/home/holger/netbeans-8.2/nb/core/locale/core_nb_zh_CN.jar:/home/holger/netbeans-8.2/nb/core/locale/org-netbeans-upgrader_ja.jar:/home/holger/netbeans-8.2/nb/core/locale/core_nb_ru.jar:/home/holger/netbeans-8.2/nb/core/locale/org-netbeans-upgrader_zh_CN.jar:/home/holger/netbeans-8.2/nb/core/locale/core_nb.jar:/home/holger/netbeans-8.2/nb/core/locale/core_nb_pt_BR.jar:/home/holger/netbeans-8.2/nb/core/locale/core_nb_ja.jar:/home/holger/netbeans-8.2/nb/core/locale/org-netbeans-upgrader_pt_BR.jar" />
    <property name="java.vm.specification.version" value="1.8" />
    <property name="libs.hibernate4-support.src" value="" />
    <property name="netbeans.productversion" value="NetBeans IDE 8.2 (Build 201609300101)" />
    <property name="libs.jaxws21.src" value="" />
    <property name="application.title" value="joana-key-refactoring" />
    <property name="do.archive" value="true" />
    <property name="netbeans.autoupdate.language" value="de" />
    <property name="java.vendor" value="Oracle Corporation" />
    <property name="sun.font.fontmanager" value="sun.awt.X11FontManager" />
    <property name="jar.index.metainf" value="false" />
    <property name="javac.debug" value="true" />
    <property name="javadoc.splitindex" value="true" />
    <property name="file.separator" value="/" />
    <property name="javac.includesfile.binary" value="/home/holger/Code/joana-key-refactoring/null2115882116" />
    <property name="libs.junit_4.maven-pom" value="" />
    <property name="mkdist.disabled" value="false" />
    <property name="javac.test.processorpath" value="dep\antlr-runtime-4.5.3.jar:dep\joana.api.jar:dep\KeY.jar:json.jar:dep/javacg-0.1-SNAPSHOT-static.jar:dep/commons-io-2.5/commons-io-2.5.jar:build/classes" />
    <property name="netbeans.buildnumber" value="201609300101" />
    <property name="libs.JWSAntTasks.javadoc" value="" />
    <property name="build.generated.sources.dir" value="build/generated-sources" />
    <property name="libs.eclipselinkmodelgen.classpath" value="/home/holger/netbeans-8.2/java/modules/ext/eclipselink/org.eclipse.persistence.jpa.modelgen_2.5.2.v20140319-9ad6abd.jar" />
    <property name="sun.java.launcher" value="SUN_STANDARD" />
    <property name="libs.hibernate4-persistencemodelgen.javadoc" value="" />
    <property name="libs.jaxb.javadoc" value="/home/holger/netbeans-8.2/ide/docs/jaxb-api-doc.zip" />
    <property name="org.openide.awt.SwingBrowserImpl.do-not-block-awt" value="false" />
    <property name="javac.includes.binary" value="/home/holger/Code/joana-key-refactoring/build/test/classes/joanakeyrefactoring/ViolationsWrapperTest.class" />
    <property name="ant.home" value="/home/holger/netbeans-8.2/extide/ant" />
    <property name="libs.junit_4.src" value="/home/holger/netbeans-8.2/platform/docs/junit-4.12-sources.jar" />
    <property name="file.reference.joana.api.jar-1" value="dep\joana.api.jar" />
    <property name="libs.testng.classpath" value="/home/holger/netbeans-8.2/platform/modules/ext/testng-6.8.1-dist.jar" />
    <property name="libs.absolutelayout.maven-pom" value="" />
    <property name="ant.java.version" value="1.8" />
    <property name="java.library.path" value="/home/holger/jdk1.8.0_141/jre/lib/amd64:/home/holger/jdk1.8.0_141/jre/lib/i386::/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib" />
    <property name="javadoc.author" value="false" />
    <property name="java.util.logging.config.class" value="org.netbeans.core.startup.TopLogging" />
    <property name="libs.spring-framework400.src" value="" />
    <property name="libs.PostgreSQLDriver.src" value="" />
    <property name="sun.arch.data.model" value="64" />
    <property name="basedir" value="/home/holger/Code/joana-key-refactoring" />
    <property name="libs.jpa20-persistence.maven-pom" value="" />
    <property name="jar.compress" value="false" />
    <property name="path.separator" value=":" />
    <property name="ant.junit.enabletestlistenerevents" value="true" />
    <property name="sun.io.unicode.encoding" value="UnicodeLittle" />
    <property name="libs.jaxws21.classpath" value="/home/holger/netbeans-8.2/ide/modules/ext/jaxb/jaxb-impl.jar:/home/holger/netbeans-8.2/ide/modules/ext/jaxb/jaxb-xjc.jar:/home/holger/netbeans-8.2/java/modules/ext/jaxws22/FastInfoset.jar:/home/holger/netbeans-8.2/java/modules/ext/jaxws22/gmbal-api-only.jar:/home/holger/netbeans-8.2/java/modules/ext/jaxws22/ha-api.jar:/home/holger/netbeans-8.2/java/modules/ext/jaxws22/javax.mail_1.4.jar:/home/holger/netbeans-8.2/java/modules/ext/jaxws22/jaxws-rt.jar:/home/holger/netbeans-8.2/java/modules/ext/jaxws22/jaxws-tools.jar:/home/holger/netbeans-8.2/java/modules/ext/jaxws22/management-api.jar:/home/holger/netbeans-8.2/java/modules/ext/jaxws22/mimepull.jar:/home/holger/netbeans-8.2/java/modules/ext/jaxws22/policy.jar:/home/holger/netbeans-8.2/java/modules/ext/jaxws22/saaj-impl.jar:/home/holger/netbeans-8.2/java/modules/ext/jaxws22/stax-ex.jar:/home/holger/netbeans-8.2/java/modules/ext/jaxws22/stax2-api.jar:/home/holger/netbeans-8.2/java/modules/ext/jaxws22/streambuffer.jar:/home/holger/netbeans-8.2/java/modules/ext/jaxws22/woodstox-core-asl.jar:/home/holger/netbeans-8.2/java/modules/ext/jaxws22/api/jaxws-api.jar:/home/holger/netbeans-8.2/java/modules/ext/jaxws22/api/jsr181-api.jar:/home/holger/netbeans-8.2/java/modules/ext/jaxws22/api/javax.annotation.jar:/home/holger/netbeans-8.2/java/modules/ext/jaxws22/api/saaj-api.jar:/home/holger/netbeans-8.2/ide/modules/ext/jaxb/activation.jar:/home/holger/netbeans-8.2/ide/modules/ext/jaxb/api/jaxb-api.jar:/home/holger/netbeans-8.2/ide/modules/ext/jaxb/api/jsr173_1.0_api.jar" />
    <property name="compile.on.save" value="false" />
    <property name="apple.awt.graphics.UseQuartz" value="true" />
    <property name="ant.file.type.joana-key-refactoring-impl" value="file" />
    <property name="addExports:java.desktop/sun.awt.im" value="ALL-UNNAMED" />
    <property name="user.language" value="de" />
    <property name="testng.mode" value="testng" />
    <property name="libs.JAXB-ENDORSED.maven-pom" value="" />
    <property name="libs.eclipselink.maven-pom" value="" />
    <property name="application.vendor" value="holger" />
    <property name="test.binaryincludes" value="&lt;nothing&gt;" />
    <property name="manifest.available" value="true" />
    <property name="libs.spring-framework300.maven-pom" value="" />
    <property name="run.test.classpath" value="dep\antlr-runtime-4.5.3.jar:dep\joana.api.jar:dep\KeY.jar:json.jar:dep/javacg-0.1-SNAPSHOT-static.jar:dep/commons-io-2.5/commons-io-2.5.jar:build/classes:build/test/classes" />
    <property name="ant.project.invoked-targets" value="debug-test" />
    <property name="test.binaryexcludes" value="" />
    <property name="libs.swing-layout.javadoc" value="/home/holger/netbeans-8.2/platform/docs/swing-layout-1.0.4-doc.zip" />
    <property name="sun.java2d.dpiaware" value="true" />
    <property name="file.reference.antlr-runtime-4.5.3.jar" value="dep\antlr-runtime-4.5.3.jar" />
    <property name="libs.hibernate4-persistence.maven-pom" value="" />
    <property name="addExports:java.base/jdk.internal.jrtfs" value="ALL-UNNAMED" />
    <property name="https.nonProxyHosts" value="localhost|127.0.0.1|holger-ThinkPad-T430s" />
    <property name="libs.PostgreSQLDriver.maven-pom" value="" />
    <property name="java.class.version" value="52.0" />
    <property name="jpda.address" value="localhost:40165" />
    <property name="libs.hibernate4-persistencemodelgen.maven-pom" value="" />
    <property name="libs.eclipselink.javadoc" value="/home/holger/netbeans-8.2/java/modules/ext/docs/javax.persistence-2.1.0-doc.zip" />
    <property name="user.properties.file" value="/home/holger/.netbeans/8.2/build.properties" />
    <property name="runtime.encoding" value="UTF-8" />
    <property name="libs.javac-api.maven-pom" value="" />
    <property name="file.encoding.pkg" value="sun.io" />
    <property name="sun.cpu.endian" value="little" />
    <property name="libs.JAXB-ENDORSED.javadoc" value="" />
    <property name="libs.JWSAntTasks.classpath" value="/home/holger/netbeans-8.2/java/ant/extra/org-netbeans-modules-javawebstart-anttasks.jar" />
    <property name="libs.spring-framework300.src" value="" />
    <property name="empty.dir" value="/home/holger/Code/joana-key-refactoring/build/empty" />
    <property name="&lt;&lt;&lt;&lt;&lt;&lt;&lt;" value="HEAD" />
    <property name="version-output" value="java version &quot;1.8" />
    <property name="test.binarytestincludes" value="" />
    <property name="libs.hibernate4-persistencemodelgen.src" value="" />
    <property name="javadoc.preview" value="true" />
    <property name="libs.jpa20-persistence.javadoc" value="/home/holger/netbeans-8.2/java/modules/ext/docs/javax.persistence-2.1.0-doc.zip" />
    <property name="java.home" value="/home/holger/jdk1.8.0_141/jre" />
    <property name="debug.test.classpath" value="dep\antlr-runtime-4.5.3.jar:dep\joana.api.jar:dep\KeY.jar:json.jar:dep/javacg-0.1-SNAPSHOT-static.jar:dep/commons-io-2.5/commons-io-2.5.jar:build/classes:build/test/classes" />
    <property name="netbeans.importclass" value="org.netbeans.upgrade.AutoUpgrade" />
    <property name="ant.project.default-target" value="default" />
    <property name="annotation.processing.run.all.processors" value="true" />
    <property name="libs.PostgreSQLDriver.javadoc" value="" />
    <property name="libs.MySQLDriver.maven-pom" value="" />
    <property name="libs.hibernate4-persistence.javadoc" value="/home/holger/netbeans-8.2/java/modules/ext/docs/javax.persistence-2.1.0-doc.zip" />
    <property name="http.nonProxyHosts" value="localhost|127.0.0.1|holger-ThinkPad-T430s" />
    <property name="libs.junit_4.javadoc" value="/home/holger/netbeans-8.2/platform/docs/junit-4.12-javadoc.jar" />
    <property name="run.classpath" value="dep\antlr-runtime-4.5.3.jar:dep\joana.api.jar:dep\KeY.jar:json.jar:dep/javacg-0.1-SNAPSHOT-static.jar:dep/commons-io-2.5/commons-io-2.5.jar:build/classes" />
    <property name="jna.boot.library.name" value="jnidispatch-422" />
    <property name="sun.awt.datatransfer.timeout" value="1000" />
    <property name="libs.jpa2-persistence.maven-pom" value="" />
    <property name="annotation.processing.enabled.in.editor" value="false" />
    <property name="libs.hibernate4-support.classpath" value="/home/holger/netbeans-8.2/java/modules/ext/hibernate4/antlr-2.7.7.jar:/home/holger/netbeans-8.2/java/modules/ext/hibernate4/c3p0-0.9.2.1.jar:/home/holger/netbeans-8.2/java/modules/ext/hibernate4/hibernate-c3p0-4.3.1.Final.jar:/home/holger/netbeans-8.2/java/modules/ext/hibernate4/mchange-commons-java-0.2.3.4.jar:/home/holger/netbeans-8.2/java/modules/ext/hibernate4/dom4j-1.6.1.jar:/home/holger/netbeans-8.2/java/modules/ext/hibernate4/ehcache-core-2.4.3.jar:/home/holger/netbeans-8.2/java/modules/ext/hibernate4/hibernate-ehcache-4.3.1.Final.jar:/home/holger/netbeans-8.2/java/modules/ext/hibernate4/hibernate-core-4.3.1.Final.jar:/home/holger/netbeans-8.2/java/modules/ext/hibernate4/jboss-logging-3.1.3.GA.jar:/home/holger/netbeans-8.2/java/modules/ext/hibernate4/hibernate-commons-annotations-4.0.4.Final.jar:/home/holger/netbeans-8.2/java/modules/ext/hibernate4/hibernate-entitymanager-4.3.1.Final.jar:/home/holger/netbeans-8.2/java/modules/ext/hibernate4/javassist-3.18.1-GA.jar:/home/holger/netbeans-8.2/java/modules/ext/hibernate4/jboss-transaction-api_1.2_spec-1.0.0.Final.jar:/home/holger/netbeans-8.2/java/modules/ext/hibernate4/slf4j-api-1.6.1.jar:/home/holger/netbeans-8.2/java/modules/ext/hibernate4/slf4j-simple-1.6.1.jar" />
    <property name="nb.native.filechooser" value="false" />
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers" />
    <property name="ant.file.joana-key-refactoring-impl" value="/home/holger/Code/joana-key-refactoring/nbproject/build-impl.xml" />
    <property name="javac.deprecation" value="false" />
    <property name="javadoc.use" value="true" />
    <property name="sun.java2d.noddraw" value="true" />
    <property name="javac.processorpath" value="dep\antlr-runtime-4.5.3.jar:dep\joana.api.jar:dep\KeY.jar:json.jar:dep/javacg-0.1-SNAPSHOT-static.jar:dep/commons-io-2.5/commons-io-2.5.jar" />
    <property name="libs.hamcrest.maven-pom" value="" />
    <property name="javac.compilerargs" value="" />
    <property name="ant.file" value="/home/holger/Code/joana-key-refactoring/build.xml" />
    <property name="libs.beans-binding.maven-pom" value="" />
    <property name="libs.hibernate4-support.javadoc" value="/home/holger/netbeans-8.2/java/modules/ext/docs/javax.persistence-2.1.0-doc.zip" />
    <property name="libs.beans-binding.src" value="" />
    <property name="java.vm.specification.vendor" value="Oracle Corporation" />
    <property name="libs.swing-layout.src" value="/home/holger/netbeans-8.2/platform/docs/swing-layout-1.0.4-src.zip" />
    <property name="org.openide.major.version" value="IDE/1" />
    <property name="java.vm.name" value="Java HotSpot(TM) 64-Bit Server VM" />
    <property name="netbeans.user" value="/home/holger/.netbeans/8.2" />
    <property name="javadoc.additionalparam" value="" />
    <property name="java.io.tmpdir" value="/tmp" />
    <property name="java.vendor.url" value="http://java.oracle.com/" />
    <property name="endorsed.classpath.cmd.line.arg" value="" />
    <property name="jna.loaded" value="true" />
    <property name="junit.available" value="true" />
    <property name="org.openide.awt.ActionReference.completion" value="org.netbeans.modules.apisupport.project.layers.PathCompletions" />
    <property name="sun.boot.library.path" value="/home/holger/jdk1.8.0_141/jre/lib/amd64" />
    <property name="have.sources" value="true" />
    <property name="libs.hamcrest.javadoc" value="" />
    <property name="debug.classpath" value="dep\antlr-runtime-4.5.3.jar:dep\joana.api.jar:dep\KeY.jar:json.jar:dep/javacg-0.1-SNAPSHOT-static.jar:dep/commons-io-2.5/commons-io-2.5.jar:build/classes" />
    <property name="javac.external.vm" value="true" />
    <property name="javadoc.private" value="false" />
    <property name="test.src.dir" value="test" />
    <property name="ap.processors.internal" value="" />
    <property name="meta.inf.dir" value="src/META-INF" />
    <property name="javadoc.encoding.used" value="UTF-8" />
    <property name="dist.jar" value="dist/joana-key-refactoring.jar" />
    <property name="libs.spring-framework400.maven-pom" value="" />
    <property name="java.runtime.name" value="Java(TM) SE Runtime Environment" />
    <property name="file.reference.KeY.jar" value="dep\KeY.jar" />
    <property name="ant.project.name" value="joana-key-refactoring" />
    <property name="netbeans.hash.code" value="unique=NBJDK_EXTIDE_JAVA_JDK0351290b6-28f6-47ab-a03e-45625976687a_414dad1a-358c-4eae-8732-dd8f92f4be90" />
    <property name="netbeans.default_userdir_root" value="/home/holger/.netbeans" />
    <property name="sun.cpu.isalist" value="" />
    <property name="libs.spring-framework400.javadoc" value="" />
    <property name="libs.CopyLibs.javadoc" value="" />
    <property name="org.openide.specification.version" value="6.2" />
    <property name="user.home" value="/home/holger" />
    <property name="annotation.processing.processors.list" value="" />
    <property name="debug-args-line" value="-Xdebug" />
    <property name="libs.JWSAntTasks.src" value="" />
    <property name="jar.index" value="false" />
    <property name="libs.CopyLibs.maven-pom" value="" />
    <property name="libs.spring-framework300.javadoc" value="" />
    <property name="libs.absolutelayout.javadoc" value="" />
    <property name="java.specification.name" value="Java Platform API Specification" />
    <property name="ant.file.joana-key-refactoring" value="/home/holger/Code/joana-key-refactoring/build.xml" />
    <property name="do.archive+main.class.available" value="true" />
    <property name="java.specification.vendor" value="Oracle Corporation" />
    <property name="libs.javac-api.classpath" value="/home/holger/netbeans-8.2/java/modules/ext/nb-javac-api.jar" />
    <property name="java.version" value="1.8.0_141" />
    <property name="run.jvmargs.ide" value="" />
    <property name="javadoc.version" value="false" />
    <property name="libs.MySQLDriver.javadoc" value="" />
    <property name="org.openide.version" value="deprecated" />
    <property name="platform.java" value="/home/holger/jdk1.8.0_141/jre/bin/java" />
    <property name="source.encoding" value="UTF-8" />
    <property name="ap.cmd.line.internal" value="" />
    <property name="libs.eclipselinkmodelgen.maven-pom" value="" />
    <property name="libs.eclipselinkmodelgen.javadoc" value="" />
    <property name="netbeans.home+have.tests" value="true" />
    <property name="annotation.processing.processor.options" value="" />
    <property name="libs.testng.maven-pom" value="" />
    <property name="libs.jaxb.src" value="" />
    <property name="work.dir" value="/home/holger/Code/joana-key-refactoring" />
    <property name="libs.jaxb.classpath" value="/home/holger/netbeans-8.2/ide/modules/ext/jaxb/jaxb-impl.jar:/home/holger/netbeans-8.2/ide/modules/ext/jaxb/jaxb-xjc.jar:/home/holger/netbeans-8.2/ide/modules/ext/jaxb/jaxb1-impl.jar:/home/holger/netbeans-8.2/ide/modules/ext/jaxb/activation.jar:/home/holger/netbeans-8.2/ide/modules/ext/jaxb/api/jaxb-api.jar:/home/holger/netbeans-8.2/ide/modules/ext/jaxb/api/jsr173_1.0_api.jar" />
    <property name="do.depend" value="false" />
    <property name="dist.javadoc.dir" value="dist/javadoc" />
    <property name="libs.swing-layout.classpath" value="/home/holger/netbeans-8.2/platform/modules/ext/swing-layout-1.0.4.jar" />
    <property name="build.generated.dir" value="build/generated" />
    <property name="javac.source" value="1.8" />
    <property name="line.separator" value="&#xa;" />
    <property name="java.specification.version" value="1.8" />
    <property name="libs.jaxws21.maven-pom" value="" />
    <property name="java.vm.info" value="mixed mode" />
    <property name="nb.junit.batch" value="true" />
    <property name="junit.forkmode" value="perTest" />
    <property name="addExports:java.management/sun.management" value="ALL-UNNAMED" />
    <property name="sun.boot.class.path" value="/home/holger/jdk1.8.0_141/jre/lib/resources.jar:/home/holger/jdk1.8.0_141/jre/lib/rt.jar:/home/holger/jdk1.8.0_141/jre/lib/sunrsasign.jar:/home/holger/jdk1.8.0_141/jre/lib/jsse.jar:/home/holger/jdk1.8.0_141/jre/lib/jce.jar:/home/holger/jdk1.8.0_141/jre/lib/charsets.jar:/home/holger/jdk1.8.0_141/jre/lib/jfr.jar:/home/holger/jdk1.8.0_141/jre/classes" />
    <property name="javac.target" value="1.8" />
    <property name="built-jar.properties" value="/home/holger/Code/joana-key-refactoring/build/built-jar.properties" />
    <property name="build.test.classes.dir" value="build/test/classes" />
    <property name="src.dir" value="src" />
    <property name="annotation.processing.enabled" value="true" />
    <property name="libs.jpa2-persistence.src" value="" />
    <property name="file.reference.commons-io-2.5.jar" value="dep/commons-io-2.5/commons-io-2.5.jar" />
    <property name="libs.jpa20-persistence.src" value="" />
    <property name="ant.file.type.joana-key-refactoring" value="file" />
    <property name="dist.dir" value="dist" />
    <property name="testng.debug.mode" value="" />
    <property name="javac.fork" value="true" />
    <property name="java.awt.printerjob" value="sun.print.PSPrinterJob" />
    <property name="default.javac.source" value="1.8" />
    <property name="debug-transport-by-os" value="dt_socket" />
    <property name="libs.MySQLDriver.src" value="" />
    <property name="sun.jnu.encoding" value="UTF-8" />
    <property name="java.runtime.version" value="1.8.0_141-b15" />
    <property name="build.test.results.dir" value="build/test/results" />
    <property name="jna.platform.library.path" value="/usr/lib/x86_64-linux-gnu:/lib/x86_64-linux-gnu:/lib64:/usr/lib:/lib:/usr/lib/x86_64-linux-gnu/mesa-egl:/usr/lib/x86_64-linux-gnu/mesa" />
    <property name="default.javac.target" value="1.8" />
    <property name="libs.junit_4.classpath" value="/home/holger/netbeans-8.2/platform/modules/ext/junit-4.12.jar" />
    <property name="user.timezone" value="" />
    <property name="nb.junit.single" value="false" />
    <property name="do.jar" value="true" />
    <property name="netbeans.dirs" value="/home/holger/netbeans-8.2/nb:/home/holger/netbeans-8.2/ergonomics:/home/holger/netbeans-8.2/ide:/home/holger/netbeans-8.2/extide:/home/holger/netbeans-8.2/java:/home/holger/netbeans-8.2/apisupport:/home/holger/netbeans-8.2/webcommon:/home/holger/netbeans-8.2/websvccommon:/home/holger/netbeans-8.2/enterprise:/home/holger/netbeans-8.2/mobility:/home/holger/netbeans-8.2/profiler:/home/holger/netbeans-8.2/python:/home/holger/netbeans-8.2/php:/home/holger/netbeans-8.2/identity:/home/holger/netbeans-8.2/harness:/home/holger/netbeans-8.2/cnd:/home/holger/netbeans-8.2/cndext:/home/holger/netbeans-8.2/dlight:/home/holger/netbeans-8.2/groovy:/home/holger/netbeans-8.2/extra:/home/holger/netbeans-8.2/javacard:/home/holger/netbeans-8.2/javafx:" />
    <property name="java.ext.dirs" value="/home/holger/jdk1.8.0_141/jre/lib/ext:/usr/java/packages/lib/ext" />
    <property name="endorsed.classpath" value="" />
    <property name="libs.absolutelayout.classpath" value="/home/holger/netbeans-8.2/java/modules/ext/AbsoluteLayout.jar" />
    <property name="excludes" value="" />
    <property name="libs.jpa2-persistence.javadoc" value="/home/holger/netbeans-8.2/java/modules/ext/docs/javax.persistence-2.1.0-doc.zip" />
    <property name="java.class.path" value="/home/holger/Code/joana-key-refactoring/dep/antlr-runtime-4.5.3.jar:/home/holger/Code/joana-key-refactoring/dep/joana.api.jar:/home/holger/Code/joana-key-refactoring/dep/KeY.jar:/home/holger/Code/joana-key-refactoring/json.jar:/home/holger/Code/joana-key-refactoring/dep/javacg-0.1-SNAPSHOT-static.jar:/home/holger/Code/joana-key-refactoring/dep/commons-io-2.5/commons-io-2.5.jar:/home/holger/Code/joana-key-refactoring/build/classes:/home/holger/Code/joana-key-refactoring/build/test/classes:/home/holger/netbeans-8.2/extide/ant/lib/ant-launcher.jar:/home/holger/netbeans-8.2/extide/ant/lib/ant.jar:/home/holger/netbeans-8.2/extide/ant/lib/ant-junit.jar:/home/holger/netbeans-8.2/extide/ant/lib/ant-junit4.jar" />
    <property name="apple.laf.useScreenMenuBar" value="true" />
    <property name="addExports:java.desktop/java.awt.peer" value="ALL-UNNAMED" />
    <property name="addExports:java.desktop/com.sun.beans.editors" value="ALL-UNNAMED" />
    <property name="do.mkdist" value="true" />
    <property name="libs.absolutelayout.src" value="" />
    <property name="libs.jpa20-persistence.classpath" value="/home/holger/netbeans-8.2/java/modules/ext/eclipselink/javax.persistence_2.1.0.v201304241213.jar" />
    <property name="os.version" value="4.4.0-89-generic" />
    <property name="application.args" value="" />
    <property name="main.class.available" value="true" />
    <property name="sun.awt.enableExtraMouseButtons" value="true" />
    <property name="sun.desktop" value="gnome" />
    <property name="libs.hibernate4-persistence.src" value="" />
    <property name="libs.hibernate4-support.maven-pom" value="" />
    <property name="libs.JAXB-ENDORSED.classpath" value="/home/holger/netbeans-8.2/ide/modules/ext/jaxb/api/jaxb-api.jar" />
    <property name="nb.internal.action.name" value="debug.test.single" />
    <property name="libs.eclipselink.classpath" value="/home/holger/netbeans-8.2/java/modules/ext/eclipselink/eclipselink.jar:/home/holger/netbeans-8.2/java/modules/ext/eclipselink/javax.persistence_2.1.0.v201304241213.jar:/home/holger/netbeans-8.2/java/modules/ext/eclipselink/org.eclipse.persistence.jpa.jpql_2.5.2.v20140319-9ad6abd.jar" />
    <property name="file.reference.javacg-0.1-SNAPSHOT-static.jar" value="dep/javacg-0.1-SNAPSHOT-static.jar" />
    <property name="libs.beans-binding.javadoc" value="/home/holger/netbeans-8.2/java/docs/beansbinding-1.2.1-doc.zip" />
    <property name="java.awt.graphicsenv" value="sun.awt.X11GraphicsEnvironment" />
    <property name="file.reference.json.jar" value="json.jar" />
    <property name="java.vm.vendor" value="Oracle Corporation" />
    <property name="libs.CopyLibs.classpath" value="/home/holger/netbeans-8.2/java/ant/extra/org-netbeans-modules-java-j2seproject-copylibstask.jar" />
    <property name="libs.spring-framework300.classpath" value="/home/holger/netbeans-8.2/ide/modules/org-apache-commons-logging.jar:/home/holger/netbeans-8.2/java/modules/ext/cglib-2.2.jar:/home/holger/netbeans-8.2/java/modules/ext/spring-3.0/spring-aop-3.2.7.RELEASE.jar:/home/holger/netbeans-8.2/java/modules/ext/spring-3.0/spring-aspects-3.2.7.RELEASE.jar:/home/holger/netbeans-8.2/java/modules/ext/spring-3.0/spring-beans-3.2.7.RELEASE.jar:/home/holger/netbeans-8.2/java/modules/ext/spring-3.0/spring-build-src-3.2.7.RELEASE.jar:/home/holger/netbeans-8.2/java/modules/ext/spring-3.0/spring-context-3.2.7.RELEASE.jar:/home/holger/netbeans-8.2/java/modules/ext/spring-3.0/spring-context-support-3.2.7.RELEASE.jar:/home/holger/netbeans-8.2/java/modules/ext/spring-3.0/spring-core-3.2.7.RELEASE.jar:/home/holger/netbeans-8.2/java/modules/ext/spring-3.0/spring-expression-3.2.7.RELEASE.jar:/home/holger/netbeans-8.2/java/modules/ext/spring-3.0/spring-framework-bom-3.2.7.RELEASE.jar:/home/holger/netbeans-8.2/java/modules/ext/spring-3.0/spring-instrument-3.2.7.RELEASE.jar:/home/holger/netbeans-8.2/java/modules/ext/spring-3.0/spring-instrument-tomcat-3.2.7.RELEASE.jar:/home/holger/netbeans-8.2/java/modules/ext/spring-3.0/spring-jdbc-3.2.7.RELEASE.jar:/home/holger/netbeans-8.2/java/modules/ext/spring-3.0/spring-jms-3.2.7.RELEASE.jar:/home/holger/netbeans-8.2/java/modules/ext/spring-3.0/spring-orm-3.2.7.RELEASE.jar:/home/holger/netbeans-8.2/java/modules/ext/spring-3.0/spring-oxm-3.2.7.RELEASE.jar:/home/holger/netbeans-8.2/java/modules/ext/spring-3.0/spring-struts-3.2.7.RELEASE.jar:/home/holger/netbeans-8.2/java/modules/ext/spring-3.0/spring-test-3.2.7.RELEASE.jar:/home/holger/netbeans-8.2/java/modules/ext/spring-3.0/spring-tx-3.2.7.RELEASE.jar:/home/holger/netbeans-8.2/java/modules/ext/spring-3.0/spring-web-3.2.7.RELEASE.jar:/home/holger/netbeans-8.2/java/modules/ext/spring-3.0/spring-webmvc-3.2.7.RELEASE.jar:/home/holger/netbeans-8.2/java/modules/ext/spring-3.0/spring-webmvc-portlet-3.2.7.RELEASE.jar" />
    <property name="libs.hamcrest.src" value="" />
    <property name="run.jvmargs" value="" />
    <property name="libs.hibernate4-persistence.classpath" value="/home/holger/netbeans-8.2/java/modules/ext/hibernate4/antlr-2.7.7.jar:/home/holger/netbeans-8.2/java/modules/ext/hibernate4/c3p0-0.9.2.1.jar:/home/holger/netbeans-8.2/java/modules/ext/hibernate4/hibernate-c3p0-4.3.1.Final.jar:/home/holger/netbeans-8.2/java/modules/ext/hibernate4/mchange-commons-java-0.2.3.4.jar:/home/holger/netbeans-8.2/java/modules/ext/hibernate4/dom4j-1.6.1.jar:/home/holger/netbeans-8.2/java/modules/ext/hibernate4/ehcache-core-2.4.3.jar:/home/holger/netbeans-8.2/java/modules/ext/hibernate4/hibernate-ehcache-4.3.1.Final.jar:/home/holger/netbeans-8.2/java/modules/ext/hibernate4/hibernate-core-4.3.1.Final.jar:/home/holger/netbeans-8.2/java/modules/ext/hibernate4/jboss-logging-3.1.3.GA.jar:/home/holger/netbeans-8.2/java/modules/ext/hibernate4/hibernate-commons-annotations-4.0.4.Final.jar:/home/holger/netbeans-8.2/java/modules/ext/hibernate4/hibernate-entitymanager-4.3.1.Final.jar:/home/holger/netbeans-8.2/java/modules/ext/hibernate4/javassist-3.18.1-GA.jar:/home/holger/netbeans-8.2/java/modules/ext/hibernate4/jboss-transaction-api_1.2_spec-1.0.0.Final.jar:/home/holger/netbeans-8.2/java/modules/ext/hibernate4/slf4j-api-1.6.1.jar:/home/holger/netbeans-8.2/java/modules/ext/hibernate4/slf4j-simple-1.6.1.jar:/home/holger/netbeans-8.2/java/modules/ext/hibernate4/hibernate-jpa-2.1-api-1.0.0.Final.jar" />
    <property name="libs.JAXB-ENDORSED.src" value="" />
    <property name="dist.archive.excludes" value="" />
    <property name="libs.testng.javadoc" value="/home/holger/netbeans-8.2/platform/docs/testng-6.8.1-javadoc.zip" />
    <property name="libs.PostgreSQLDriver.classpath" value="/home/holger/netbeans-8.2/ide/modules/ext/postgresql-9.4.1209.jar" />
    <property name="libs.hibernate4-persistencemodelgen.classpath" value="/home/holger/netbeans-8.2/java/modules/ext/hibernate4/hibernate-jpamodelgen-4.3.1.Final.jar" />
    <property name="annotation.processing.source.output" value="build/generated-sources/ap-source-output" />
    <property name="main.class" value="joanakeyrefactoring.CombinedApproach" />
    <property name="libs.CopyLibs.src" value="" />
    <property name="build.dir" value="build" />
    <property name="ant.version" value="Apache Ant(TM) version 1.9.7 compiled on April 9 2016" />
    <property name="file.encoding" value="UTF-8" />
    <property name="build.classes.excludes" value="**/*.java,**/*.form" />
    <property name="jdkBug6558476" value="false" />
    <property name="javadoc.nonavbar" value="false" />
    <property name="platform.active" value="default_platform" />
    <property name="awt.toolkit" value="sun.awt.X11.XToolkit" />
    <property name="" value="======" />
  </properties>
  <testcase classname="joanakeyrefactoring.ViolationsWrapperTest" name="testGenerateSaveString" time="0.002" />
  <testcase classname="joanakeyrefactoring.ViolationsWrapperTest" name="testLoadFromSaveString" time="29.97" />
  <system-out><![CDATA[C:jzip.JZip jzip.JZip
C:jzip.JZip java.lang.Object
C:jzip.JZip java.lang.StringBuilder
C:jzip.JZip [Ljava.lang.String;
C:jzip.JZip org.apache.commons.cli.Options
C:jzip.JZip org.apache.commons.cli.Option
C:jzip.JZip org.apache.commons.cli.OptionBuilder
C:jzip.JZip org.apache.commons.cli.GnuParser
C:jzip.JZip java.lang.Throwable
C:jzip.JZip java.lang.System
C:jzip.JZip java.io.PrintStream
C:jzip.JZip java.io.BufferedReader
C:jzip.JZip java.io.InputStreamReader
C:jzip.JZip java.lang.String
C:jzip.JZip org.apache.commons.cli.HelpFormatter
C:jzip.JZip java.io.IOException
C:jzip.JZip org.apache.commons.cli.CommandLineParser
C:jzip.JZip org.apache.commons.cli.CommandLine
C:jzip.JZip java.util.Properties
C:jzip.JZip org.apache.commons.cli.ParseException
C:jzip.JZip java.io.File
C:jzip.JZip java.util.LinkedList
C:jzip.JZip java.io.FileOutputStream
C:jzip.JZip java.io.BufferedOutputStream
C:jzip.JZip java.util.zip.ZipOutputStream
C:jzip.JZip java.util.List
C:jzip.JZip java.util.Iterator
C:jzip.JZip java.util.zip.ZipEntry
C:jzip.JZip java.io.FileInputStream
C:jzip.JZip java.io.BufferedInputStream
C:jzip.JZip [B
C:jzip.JZip java.util.zip.ZipInputStream
C:jzip.JZip jzip.MyZipInputStream
C:jzip.JZip jzip.MyFileOutputStream
C:jzip.JZip java.util.Set
C:jzip.JZip java.io.FileNotFoundException
M:jzip.JZip:<init>(java.lang.String[]) (O)java.lang.Object:<init>()
M:jzip.JZip:<init>(java.lang.String[]) (O)java.lang.StringBuilder:<init>()
M:jzip.JZip:<init>(java.lang.String[]) (M)java.lang.StringBuilder:append(java.lang.String)
M:jzip.JZip:<init>(java.lang.String[]) (M)java.lang.StringBuilder:toString()
M:jzip.JZip:<init>() (O)java.lang.Object:<init>()
M:jzip.JZip:main(java.lang.String[]) (O)jzip.JZip:<init>()
M:jzip.JZip:main(java.lang.String[]) (M)jzip.JZip:start()
M:jzip.JZip:init() (O)org.apache.commons.cli.Options:<init>()
M:jzip.JZip:init() (O)org.apache.commons.cli.Option:<init>(java.lang.String,java.lang.String)
M:jzip.JZip:init() (M)org.apache.commons.cli.Options:addOption(org.apache.commons.cli.Option)
M:jzip.JZip:init() (O)org.apache.commons.cli.Option:<init>(java.lang.String,java.lang.String)
M:jzip.JZip:init() (M)org.apache.commons.cli.Options:addOption(org.apache.commons.cli.Option)
M:jzip.JZip:init() (S)org.apache.commons.cli.OptionBuilder:withArgName(java.lang.String)
M:jzip.JZip:init() (S)org.apache.commons.cli.OptionBuilder:hasArg()
M:jzip.JZip:init() (S)org.apache.commons.cli.OptionBuilder:withDescription(java.lang.String)
M:jzip.JZip:init() (S)org.apache.commons.cli.OptionBuilder:create(java.lang.String)
M:jzip.JZip:init() (M)org.apache.commons.cli.Options:addOption(org.apache.commons.cli.Option)
M:jzip.JZip:init() (S)org.apache.commons.cli.OptionBuilder:withArgName(java.lang.String)
M:jzip.JZip:init() (S)org.apache.commons.cli.OptionBuilder:hasArg()
M:jzip.JZip:init() (S)org.apache.commons.cli.OptionBuilder:withDescription(java.lang.String)
M:jzip.JZip:init() (S)org.apache.commons.cli.OptionBuilder:create(java.lang.String)
M:jzip.JZip:init() (M)org.apache.commons.cli.Options:addOption(org.apache.commons.cli.Option)
M:jzip.JZip:init() (S)org.apache.commons.cli.OptionBuilder:withArgName(java.lang.String)
M:jzip.JZip:init() (S)org.apache.commons.cli.OptionBuilder:hasOptionalArgs(int)
M:jzip.JZip:init() (S)org.apache.commons.cli.OptionBuilder:withValueSeparator(char)
M:jzip.JZip:init() (S)org.apache.commons.cli.OptionBuilder:withDescription(java.lang.String)
M:jzip.JZip:init() (S)org.apache.commons.cli.OptionBuilder:create(java.lang.String)
M:jzip.JZip:init() (M)org.apache.commons.cli.Options:addOption(org.apache.commons.cli.Option)
M:jzip.JZip:init() (O)org.apache.commons.cli.Option:<init>(java.lang.String,java.lang.String)
M:jzip.JZip:init() (M)org.apache.commons.cli.Options:addOption(org.apache.commons.cli.Option)
M:jzip.JZip:init() (S)org.apache.commons.cli.OptionBuilder:withArgName(java.lang.String)
M:jzip.JZip:init() (S)org.apache.commons.cli.OptionBuilder:hasOptionalArgs(int)
M:jzip.JZip:init() (S)org.apache.commons.cli.OptionBuilder:withDescription(java.lang.String)
M:jzip.JZip:init() (S)org.apache.commons.cli.OptionBuilder:create(java.lang.String)
M:jzip.JZip:init() (M)org.apache.commons.cli.Options:addOption(org.apache.commons.cli.Option)
M:jzip.JZip:init() (S)org.apache.commons.cli.OptionBuilder:withArgName(java.lang.String)
M:jzip.JZip:init() (S)org.apache.commons.cli.OptionBuilder:hasOptionalArgs(int)
M:jzip.JZip:init() (S)org.apache.commons.cli.OptionBuilder:withDescription(java.lang.String)
M:jzip.JZip:init() (S)org.apache.commons.cli.OptionBuilder:create(java.lang.String)
M:jzip.JZip:init() (M)org.apache.commons.cli.Options:addOption(org.apache.commons.cli.Option)
M:jzip.JZip:init() (O)org.apache.commons.cli.GnuParser:<init>()
M:jzip.JZip:start() (O)jzip.JZip:init()
M:jzip.JZip:start() (M)java.io.PrintStream:println(java.lang.String)
M:jzip.JZip:start() (O)java.io.InputStreamReader:<init>(java.io.InputStream)
M:jzip.JZip:start() (O)java.io.BufferedReader:<init>(java.io.Reader)
M:jzip.JZip:start() (M)java.lang.String:equals(java.lang.Object)
M:jzip.JZip:start() (M)java.lang.String:equals(java.lang.Object)
M:jzip.JZip:start() (M)java.io.BufferedReader:readLine()
M:jzip.JZip:start() (M)java.lang.String:trim()
M:jzip.JZip:start() (M)java.lang.String:equals(java.lang.Object)
M:jzip.JZip:start() (O)org.apache.commons.cli.HelpFormatter:<init>()
M:jzip.JZip:start() (M)org.apache.commons.cli.HelpFormatter:printHelp(java.lang.String,org.apache.commons.cli.Options)
M:jzip.JZip:start() (M)java.lang.String:trim()
M:jzip.JZip:start() (M)java.lang.String:equals(java.lang.Object)
M:jzip.JZip:start() (M)java.lang.String:split(java.lang.String)
M:jzip.JZip:start() (O)java.lang.StringBuilder:<init>(java.lang.String)
M:jzip.JZip:start() (M)java.lang.StringBuilder:append(java.lang.String)
M:jzip.JZip:start() (M)java.lang.StringBuilder:toString()
M:jzip.JZip:start() (O)jzip.JZip:parseAndRun(java.lang.String[])
M:jzip.JZip:start() (M)java.lang.String:equals(java.lang.Object)
M:jzip.JZip:start() (M)java.io.IOException:printStackTrace()
M:jzip.JZip:parseAndRun(java.lang.String[]) (I)org.apache.commons.cli.CommandLineParser:parse(org.apache.commons.cli.Options,java.lang.String[])
M:jzip.JZip:parseAndRun(java.lang.String[]) (M)org.apache.commons.cli.CommandLine:hasOption(java.lang.String)
M:jzip.JZip:parseAndRun(java.lang.String[]) (M)org.apache.commons.cli.CommandLine:getOptionValue(java.lang.String)
M:jzip.JZip:parseAndRun(java.lang.String[]) (O)jzip.JZip:loadConfig(java.lang.String)
M:jzip.JZip:parseAndRun(java.lang.String[]) (M)org.apache.commons.cli.CommandLine:hasOption(java.lang.String)
M:jzip.JZip:parseAndRun(java.lang.String[]) (M)org.apache.commons.cli.CommandLine:getOptionValue(java.lang.String)
M:jzip.JZip:parseAndRun(java.lang.String[]) (O)jzip.JZip:storeConfig(java.lang.String)
M:jzip.JZip:parseAndRun(java.lang.String[]) (M)org.apache.commons.cli.CommandLine:hasOption(java.lang.String)
M:jzip.JZip:parseAndRun(java.lang.String[]) (M)org.apache.commons.cli.CommandLine:getOptionValues(java.lang.String)
M:jzip.JZip:parseAndRun(java.lang.String[]) (O)jzip.JZip:setConfigValue(java.lang.String,java.lang.String)
M:jzip.JZip:parseAndRun(java.lang.String[]) (M)org.apache.commons.cli.CommandLine:hasOption(java.lang.String)
M:jzip.JZip:parseAndRun(java.lang.String[]) (O)jzip.JZip:showConfig()
M:jzip.JZip:parseAndRun(java.lang.String[]) (M)org.apache.commons.cli.CommandLine:hasOption(java.lang.String)
M:jzip.JZip:parseAndRun(java.lang.String[]) (M)org.apache.commons.cli.CommandLine:getOptionValues(java.lang.String)
M:jzip.JZip:parseAndRun(java.lang.String[]) (M)java.util.Properties:contains(java.lang.Object)
M:jzip.JZip:parseAndRun(java.lang.String[]) (M)java.util.Properties:getProperty(java.lang.String)
M:jzip.JZip:parseAndRun(java.lang.String[]) (M)java.util.Properties:containsKey(java.lang.Object)
M:jzip.JZip:parseAndRun(java.lang.String[]) (M)java.util.Properties:getProperty(java.lang.String)
M:jzip.JZip:parseAndRun(java.lang.String[]) (M)jzip.JZip:zipIt(java.lang.String,java.lang.String)
M:jzip.JZip:parseAndRun(java.lang.String[]) (M)org.apache.commons.cli.CommandLine:hasOption(java.lang.String)
M:jzip.JZip:parseAndRun(java.lang.String[]) (M)org.apache.commons.cli.CommandLine:getOptionValues(java.lang.String)
M:jzip.JZip:parseAndRun(java.lang.String[]) (M)java.util.Properties:containsKey(java.lang.Object)
M:jzip.JZip:parseAndRun(java.lang.String[]) (M)java.util.Properties:getProperty(java.lang.String)
M:jzip.JZip:parseAndRun(java.lang.String[]) (O)org.apache.commons.cli.ParseException:<init>(java.lang.String)
M:jzip.JZip:parseAndRun(java.lang.String[]) (M)java.util.Properties:containsKey(java.lang.Object)
M:jzip.JZip:parseAndRun(java.lang.String[]) (M)java.util.Properties:getProperty(java.lang.String)
M:jzip.JZip:parseAndRun(java.lang.String[]) (M)java.lang.String:toLowerCase()
M:jzip.JZip:parseAndRun(java.lang.String[]) (M)java.lang.String:equals(java.lang.Object)
M:jzip.JZip:parseAndRun(java.lang.String[]) (O)java.io.File:<init>(java.lang.String)
M:jzip.JZip:parseAndRun(java.lang.String[]) (M)java.io.File:exists()
M:jzip.JZip:parseAndRun(java.lang.String[]) (M)java.io.File:mkdirs()
M:jzip.JZip:parseAndRun(java.lang.String[]) (M)jzip.JZip:unZipIt(java.lang.String,java.lang.String)
M:jzip.JZip:parseAndRun(java.lang.String[]) (M)java.io.PrintStream:println(java.lang.String)
M:jzip.JZip:parseAndRun(java.lang.String[]) (M)org.apache.commons.cli.ParseException:getMessage()
M:jzip.JZip:parseAndRun(java.lang.String[]) (M)java.io.PrintStream:println(java.lang.String)
M:jzip.JZip:zipIt(java.lang.String,java.lang.String) (O)java.util.LinkedList:<init>()
M:jzip.JZip:zipIt(java.lang.String,java.lang.String) (O)java.io.File:<init>(java.lang.String)
M:jzip.JZip:zipIt(java.lang.String,java.lang.String) (M)jzip.JZip:generateFileList(java.io.File,java.lang.String)
M:jzip.JZip:zipIt(java.lang.String,java.lang.String) (O)java.io.FileOutputStream:<init>(java.lang.String)
M:jzip.JZip:zipIt(java.lang.String,java.lang.String) (O)java.io.BufferedOutputStream:<init>(java.io.OutputStream,int)
M:jzip.JZip:zipIt(java.lang.String,java.lang.String) (O)java.util.zip.ZipOutputStream:<init>(java.io.OutputStream)
M:jzip.JZip:zipIt(java.lang.String,java.lang.String) (O)java.lang.StringBuilder:<init>(java.lang.String)
M:jzip.JZip:zipIt(java.lang.String,java.lang.String) (M)java.lang.StringBuilder:append(java.lang.String)
M:jzip.JZip:zipIt(java.lang.String,java.lang.String) (M)java.lang.StringBuilder:toString()
M:jzip.JZip:zipIt(java.lang.String,java.lang.String) (M)java.io.PrintStream:println(java.lang.String)
M:jzip.JZip:zipIt(java.lang.String,java.lang.String) (I)java.util.List:iterator()
M:jzip.JZip:zipIt(java.lang.String,java.lang.String) (I)java.util.Iterator:next()
M:jzip.JZip:zipIt(java.lang.String,java.lang.String) (O)java.lang.StringBuilder:<init>(java.lang.String)
M:jzip.JZip:zipIt(java.lang.String,java.lang.String) (M)java.lang.StringBuilder:append(java.lang.String)
M:jzip.JZip:zipIt(java.lang.String,java.lang.String) (M)java.lang.StringBuilder:toString()
M:jzip.JZip:zipIt(java.lang.String,java.lang.String) (M)java.io.PrintStream:println(java.lang.String)
M:jzip.JZip:zipIt(java.lang.String,java.lang.String) (O)java.util.zip.ZipEntry:<init>(java.lang.String)
M:jzip.JZip:zipIt(java.lang.String,java.lang.String) (M)java.util.zip.ZipOutputStream:putNextEntry(java.util.zip.ZipEntry)
M:jzip.JZip:zipIt(java.lang.String,java.lang.String) (S)java.lang.String:valueOf(java.lang.Object)
M:jzip.JZip:zipIt(java.lang.String,java.lang.String) (O)java.lang.StringBuilder:<init>(java.lang.String)
M:jzip.JZip:zipIt(java.lang.String,java.lang.String) (M)java.lang.StringBuilder:append(java.lang.String)
M:jzip.JZip:zipIt(java.lang.String,java.lang.String) (M)java.lang.StringBuilder:append(java.lang.String)
M:jzip.JZip:zipIt(java.lang.String,java.lang.String) (M)java.lang.StringBuilder:toString()
M:jzip.JZip:zipIt(java.lang.String,java.lang.String) (O)java.io.FileInputStream:<init>(java.lang.String)
M:jzip.JZip:zipIt(java.lang.String,java.lang.String) (O)java.io.BufferedInputStream:<init>(java.io.InputStream,int)
M:jzip.JZip:zipIt(java.lang.String,java.lang.String) (M)java.util.zip.ZipOutputStream:write(byte[],int,int)
M:jzip.JZip:zipIt(java.lang.String,java.lang.String) (M)java.io.BufferedInputStream:read(byte[])
M:jzip.JZip:zipIt(java.lang.String,java.lang.String) (M)java.io.FileInputStream:close()
M:jzip.JZip:zipIt(java.lang.String,java.lang.String) (I)java.util.Iterator:hasNext()
M:jzip.JZip:zipIt(java.lang.String,java.lang.String) (M)java.util.zip.ZipOutputStream:closeEntry()
M:jzip.JZip:zipIt(java.lang.String,java.lang.String) (M)java.util.zip.ZipOutputStream:close()
M:jzip.JZip:zipIt(java.lang.String,java.lang.String) (M)java.io.PrintStream:println(java.lang.String)
M:jzip.JZip:zipIt(java.lang.String,java.lang.String) (M)java.io.IOException:printStackTrace()
M:jzip.JZip:generateFileList(java.io.File,java.lang.String) (M)java.io.File:isFile()
M:jzip.JZip:generateFileList(java.io.File,java.lang.String) (M)java.io.File:getPath()
M:jzip.JZip:generateFileList(java.io.File,java.lang.String) (O)jzip.JZip:generateZipEntry(java.lang.String,java.lang.String)
M:jzip.JZip:generateFileList(java.io.File,java.lang.String) (I)java.util.List:add(java.lang.Object)
M:jzip.JZip:generateFileList(java.io.File,java.lang.String) (M)java.io.File:isDirectory()
M:jzip.JZip:generateFileList(java.io.File,java.lang.String) (M)java.io.File:list()
M:jzip.JZip:generateFileList(java.io.File,java.lang.String) (O)java.io.File:<init>(java.io.File,java.lang.String)
M:jzip.JZip:generateFileList(java.io.File,java.lang.String) (M)jzip.JZip:generateFileList(java.io.File,java.lang.String)
M:jzip.JZip:generateZipEntry(java.lang.String,java.lang.String) (M)java.lang.String:length()
M:jzip.JZip:generateZipEntry(java.lang.String,java.lang.String) (M)java.lang.String:length()
M:jzip.JZip:generateZipEntry(java.lang.String,java.lang.String) (M)java.lang.String:substring(int,int)
M:jzip.JZip:NotMyunZipIt(java.lang.String,java.lang.String) (O)java.io.File:<init>(java.lang.String)
M:jzip.JZip:NotMyunZipIt(java.lang.String,java.lang.String) (M)java.io.File:exists()
M:jzip.JZip:NotMyunZipIt(java.lang.String,java.lang.String) (M)java.io.File:mkdir()
M:jzip.JZip:NotMyunZipIt(java.lang.String,java.lang.String) (O)java.io.FileInputStream:<init>(java.lang.String)
M:jzip.JZip:NotMyunZipIt(java.lang.String,java.lang.String) (O)java.util.zip.ZipInputStream:<init>(java.io.InputStream)
M:jzip.JZip:NotMyunZipIt(java.lang.String,java.lang.String) (M)java.util.zip.ZipInputStream:getNextEntry()
M:jzip.JZip:NotMyunZipIt(java.lang.String,java.lang.String) (M)java.util.zip.ZipEntry:getName()
M:jzip.JZip:NotMyunZipIt(java.lang.String,java.lang.String) (S)java.lang.String:valueOf(java.lang.Object)
M:jzip.JZip:NotMyunZipIt(java.lang.String,java.lang.String) (O)java.lang.StringBuilder:<init>(java.lang.String)
M:jzip.JZip:NotMyunZipIt(java.lang.String,java.lang.String) (M)java.lang.StringBuilder:append(java.lang.String)
M:jzip.JZip:NotMyunZipIt(java.lang.String,java.lang.String) (M)java.lang.StringBuilder:append(java.lang.String)
M:jzip.JZip:NotMyunZipIt(java.lang.String,java.lang.String) (M)java.lang.StringBuilder:toString()
M:jzip.JZip:NotMyunZipIt(java.lang.String,java.lang.String) (O)java.io.File:<init>(java.lang.String)
M:jzip.JZip:NotMyunZipIt(java.lang.String,java.lang.String) (O)java.lang.StringBuilder:<init>(java.lang.String)
M:jzip.JZip:NotMyunZipIt(java.lang.String,java.lang.String) (M)java.io.File:getAbsoluteFile()
M:jzip.JZip:NotMyunZipIt(java.lang.String,java.lang.String) (M)java.lang.StringBuilder:append(java.lang.Object)
M:jzip.JZip:NotMyunZipIt(java.lang.String,java.lang.String) (M)java.lang.StringBuilder:toString()
M:jzip.JZip:NotMyunZipIt(java.lang.String,java.lang.String) (M)java.io.PrintStream:println(java.lang.String)
M:jzip.JZip:NotMyunZipIt(java.lang.String,java.lang.String) (M)java.io.File:getParent()
M:jzip.JZip:NotMyunZipIt(java.lang.String,java.lang.String) (O)java.io.File:<init>(java.lang.String)
M:jzip.JZip:NotMyunZipIt(java.lang.String,java.lang.String) (M)java.io.File:mkdirs()
M:jzip.JZip:NotMyunZipIt(java.lang.String,java.lang.String) (O)java.io.FileOutputStream:<init>(java.io.File)
M:jzip.JZip:NotMyunZipIt(java.lang.String,java.lang.String) (M)java.io.FileOutputStream:write(byte[],int,int)
M:jzip.JZip:NotMyunZipIt(java.lang.String,java.lang.String) (M)java.util.zip.ZipInputStream:read(byte[])
M:jzip.JZip:NotMyunZipIt(java.lang.String,java.lang.String) (M)java.io.FileOutputStream:close()
M:jzip.JZip:NotMyunZipIt(java.lang.String,java.lang.String) (M)java.util.zip.ZipInputStream:getNextEntry()
M:jzip.JZip:NotMyunZipIt(java.lang.String,java.lang.String) (M)java.util.zip.ZipEntry:isDirectory()
M:jzip.JZip:NotMyunZipIt(java.lang.String,java.lang.String) (M)java.util.zip.ZipInputStream:closeEntry()
M:jzip.JZip:NotMyunZipIt(java.lang.String,java.lang.String) (M)java.util.zip.ZipInputStream:close()
M:jzip.JZip:NotMyunZipIt(java.lang.String,java.lang.String) (M)java.io.PrintStream:println(java.lang.String)
M:jzip.JZip:NotMyunZipIt(java.lang.String,java.lang.String) (M)java.io.IOException:printStackTrace()
M:jzip.JZip:unZipIt(java.lang.String,java.lang.String) (M)java.lang.String:getBytes()
M:jzip.JZip:unZipIt(java.lang.String,java.lang.String) (M)java.lang.String:getBytes()
M:jzip.JZip:unZipIt(java.lang.String,java.lang.String) (M)jzip.JZip:unZipItByte(byte[],byte[])
M:jzip.JZip:unZipItByte(byte[],byte[]) (O)jzip.MyZipInputStream:<init>(byte[])
M:jzip.JZip:unZipItByte(byte[],byte[]) (O)jzip.MyFileOutputStream:<init>()
M:jzip.JZip:unZipItByte(byte[],byte[]) (O)jzip.JZip:unZipItExtract(byte[],jzip.MyZipInputStream,jzip.MyFileOutputStream)
M:jzip.JZip:unZipItExtract(byte[],jzip.MyZipInputStream,jzip.MyFileOutputStream) (M)jzip.MyZipInputStream:read()
M:jzip.JZip:unZipItExtract(byte[],jzip.MyZipInputStream,jzip.MyFileOutputStream) (M)jzip.MyFileOutputStream:write(byte[])
M:jzip.JZip:setConfigValue(java.lang.String,java.lang.String) (O)java.util.Properties:<init>()
M:jzip.JZip:setConfigValue(java.lang.String,java.lang.String) (M)java.util.Properties:put(java.lang.Object,java.lang.Object)
M:jzip.JZip:storeConfig(java.lang.String) (O)java.io.File:<init>(java.lang.String)
M:jzip.JZip:storeConfig(java.lang.String) (O)java.io.FileOutputStream:<init>(java.io.File)
M:jzip.JZip:storeConfig(java.lang.String) (M)java.util.Properties:store(java.io.OutputStream,java.lang.String)
M:jzip.JZip:storeConfig(java.lang.String) (M)java.io.IOException:printStackTrace()
M:jzip.JZip:showConfig() (M)java.util.Properties:keySet()
M:jzip.JZip:showConfig() (I)java.util.Set:iterator()
M:jzip.JZip:showConfig() (I)java.util.Iterator:next()
M:jzip.JZip:showConfig() (O)java.lang.StringBuilder:<init>()
M:jzip.JZip:showConfig() (M)java.lang.StringBuilder:append(java.lang.Object)
M:jzip.JZip:showConfig() (M)java.lang.StringBuilder:append(java.lang.String)
M:jzip.JZip:showConfig() (M)java.util.Properties:getProperty(java.lang.String)
M:jzip.JZip:showConfig() (M)java.lang.StringBuilder:append(java.lang.String)
M:jzip.JZip:showConfig() (M)java.lang.StringBuilder:toString()
M:jzip.JZip:showConfig() (M)java.io.PrintStream:println(java.lang.String)
M:jzip.JZip:showConfig() (I)java.util.Iterator:hasNext()
M:jzip.JZip:showConfig() (M)java.io.PrintStream:println(java.lang.String)
M:jzip.JZip:loadConfig(java.lang.String) (O)java.io.File:<init>(java.lang.String)
M:jzip.JZip:loadConfig(java.lang.String) (M)java.io.File:exists()
M:jzip.JZip:loadConfig(java.lang.String) (O)java.io.FileInputStream:<init>(java.io.File)
M:jzip.JZip:loadConfig(java.lang.String) (O)java.util.Properties:<init>()
M:jzip.JZip:loadConfig(java.lang.String) (M)java.util.Properties:load(java.io.InputStream)
M:jzip.JZip:loadConfig(java.lang.String) (O)jzip.JZip:showConfig()
M:jzip.JZip:loadConfig(java.lang.String) (M)java.io.FileNotFoundException:printStackTrace()
M:jzip.JZip:loadConfig(java.lang.String) (M)java.io.IOException:printStackTrace()
C:jzip.MyFileOutputStream jzip.MyFileOutputStream
C:jzip.MyFileOutputStream java.lang.Object
M:jzip.MyFileOutputStream:<init>() (O)java.lang.Object:<init>()
C:jzip.MyZipInputStream jzip.MyZipInputStream
C:jzip.MyZipInputStream java.lang.Object
M:jzip.MyZipInputStream:<init>(byte[]) (O)java.lang.Object:<init>()
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
